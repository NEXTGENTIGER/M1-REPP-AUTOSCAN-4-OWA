version: '3.8'

services:
  nmapscanner:
    build:
      context: ./Nmap
      dockerfile: Dockerfile
    container_name: nmapscanner
    volumes:
      - ./results:/app/results
    working_dir: /app
    entrypoint: ["python3", "nmapscan.py"]
    networks:
      - secnet  # Réseau dédié, isolé, pas besoin de DNS commun ici

  tshark:
    build:
      context: ./Tshark
      dockerfile: Dockerfile
    container_name: tshark
    volumes:
      - ./results:/app/results
    working_dir: /app
    entrypoint: ["python3", "capture_tshark.py"]
    cap_add:
      - NET_RAW
      - NET_ADMIN
    network_mode: "host"  # Nécessaire pour accéder au réseau réel

  zap:
    image: zaproxy/zap-stable
    container_name: zap
    command: ["zap.sh", "-daemon", "-host", "0.0.0.0", "-port", "8080", "-config", "api.disablekey=true"]
    ports:
      - "8080:8080"
    volumes:
      - ./results:/zap/wrk
    networks:
      - zapnet
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  zapscanner:
    build:
      context: ./Zap-Owsap
      dockerfile: Dockerfile
    container_name: zapscanner
    depends_on:
      zap:
        condition: service_healthy
    environment:
      - TARGET_URL
      - ZAP_API_URL=http://zap:8080
    volumes:
      - ./results:/app/results
    networks:
      - zapnet

networks:
  secnet:
    driver: bridge
  zapnet:
    driver: bridge
